FROM ubuntu:16.04
#FROM debian:stretch   # switch to this when horizon is built for it

ARG HORIZON_REPO_CHANNEL=testing
ENV ANAX_LOG_LEVEL 3
# This gets rid of ugly error msgs like: debconf: unable to initialize frontend: Dialog
ARG DEBIAN_FRONTEND=noninteractive

# Install pre-reqs for getting the horizon pkgs
RUN apt-get update && apt-get install -y curl vim jq wget apt-transport-https software-properties-common gettext-base psmisc

# Set up the apt repos for docker and horizon
RUN wget -qO- https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \
    add-apt-repository "deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
RUN wget -qO- http://pkg.bluehorizon.network/bluehorizon.network-public.key | apt-key add - && \
    add-apt-repository "deb [arch=$(dpkg --print-architecture)] http://pkg.bluehorizon.network/linux/ubuntu $(lsb_release -cs)-$HORIZON_REPO_CHANNEL main"

# Install horizon-wiotp and then do some things that wiotp_agent_setup would do
RUN apt-get update && apt-get install -y horizon-wiotp mosquitto-clients
RUN cp /etc/wiotp-edge/edge.conf.template /etc/wiotp-edge/edge.conf && mkdir -p /var/wiotp-edge/persist
# before registering, you also need to run: wiotp_create_certificate -p $WIOTP_GW_TOKEN

#RUN systemctl restart horizon.service  # <- systemd not available in a container w/o hacks
WORKDIR /root
COPY service/* /root/
# You can add a 2nd arg to this on the docker run cmd or the CMD statement in another dockerfile, to configure a specific environment
ENTRYPOINT ["/root/anax.service", "start"]
